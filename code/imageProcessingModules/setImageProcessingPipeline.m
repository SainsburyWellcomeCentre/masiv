function modulePipeline=setImageProcessingPipeline(modulePipeline)
    %% Input parsing
    if nargin<1||isempty(modulePipeline)
        modulePipeline={};
    elseif isobject(modulePipeline)
        modulePipeline={modulePipeline};
    end
    
    %% Keep original pipeline
    originalPipeline=modulePipeline;
    %% Settings
    fontSz=masivSetting('font.size');
    mainFont=masivSetting('font.name');
    
    %% Figure object
    hFig=dialog(...
        'Name', sprintf('Select image display processing steps'), ...
        'CloseRequestFcn', @cancelButtonClick);
    
    pos=hFig.Position;
    if pos(3)<600
        pos(3)=600;
        hFig.Position=pos;
    end
    %% UI objects
    hAvailableModules=uicontrol(...
        'Parent', hFig, ...
        'Units', 'normalized', ...
        'Position', [0.02 0.12 0.38 0.86], ...
        'FontName', mainFont, ...
        'FontSize', fontSz, ...
        'Style', 'listbox');
    setAvailableModules();
    hSelectedModules=uicontrol(...
        'Parent', hFig, ...
        'Units', 'normalized', ...
        'Position', [0.6 0.12 0.38 0.86], ...
        'FontName', mainFont, ...
        'FontSize', fontSz, ...
        'Style', 'listbox');
     hAddButton=uicontrol(...
        'Parent', hFig, ...
        'Units', 'normalized', ...
        'Position', [0.42 0.9 0.16 0.08], ...
        'FontName', mainFont, ...
        'FontSize', fontSz, ...
        'Style', 'pushbutton', ...
        'String', 'Add', ...
        'Callback', @addModule); %#ok<NASGU>
     hDeleteButton=uicontrol(...
        'Parent', hFig, ...
        'Units', 'normalized', ...
        'Position', [0.42 0.8 0.16 0.08], ...
        'FontName', mainFont, ...
        'FontSize', fontSz, ...
        'Style', 'pushbutton', ...
        'String', 'Delete', ...
        'Callback', @removeCurrentModule); %#ok<NASGU>
    
    hOKButton=uicontrol(...
        'Parent', hFig, ...
        'Units', 'normalized', ...
        'Position', [0.8 0.02 0.18 0.08], ...
        'FontName', mainFont, ...
        'FontSize', fontSz, ...
        'Style', 'pushbutton', ...
        'String', 'OK', ...
        'Callback', 'uiresume(gcbf)'); %#ok<NASGU>
    hCancelButton=uicontrol(...
        'Parent', hFig, ...
        'Units', 'normalized', ...
        'Position', [0.6 0.02 0.18 0.08], ...
        'FontName', mainFont, ...
        'FontSize', fontSz, ...
        'Style', 'pushbutton', ...
        'String', 'Cancel', ...
        'Callback', @cancelButtonClick); %#ok<NASGU>
    
    setSelectedModules()
    uiwait(hFig)
    delete(hFig)
    %% Callbacks
    function setAvailableModules()
        displayNames={};
        moduleNames={};
        
        baseDir=fileparts(which('singleImage_DisplayProcessor'));
        filesInBaseDir=dir(fullfile(baseDir, '*.m'));
        for ii=1:numel(filesInBaseDir)
            nm=strrep(filesInBaseDir(ii).name, '.m', '');
            if ismember(superclasses(nm), 'singleImage_DisplayProcessor')
                moduleNames=[moduleNames {nm}]; %#ok<AGROW>
                displayNames=[displayNames, eval(sprintf('%s.displayName', nm))]; %#ok<AGROW>
            end
        end
        hAvailableModules.String=displayNames;
        hAvailableModules.UserData=moduleNames;
    end
    
    function addModule(~, ~)
        try
            newModule=eval(sprintf('%s();', hAvailableModules.UserData{hAvailableModules.Value}));
            
            modulePipeline=[modulePipeline {newModule}];
            setSelectedModules;
        catch
            warning('New module cancelled or invalid')
        end
    end

    function removeCurrentModule(~,~)
        idx=hSelectedModules.Value;
        modulePipeline(idx)=[];
        if idx==numel(hSelectedModules.String)&&idx>1
            hSelectedModules.Value=idx-1;
        end
        setSelectedModules
    end

    function setSelectedModules()
        hSelectedModules.String={};
        for ii=1:numel(modulePipeline)
            hSelectedModules.String=[hSelectedModules.String; {modulePipeline{ii}.toString}];
        end
    end

    function cancelButtonClick(~,~)
        modulePipeline=originalPipeline;
        uiresume(gcbf);
    end
end



