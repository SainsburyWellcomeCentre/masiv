classdef goggleViewerDisplay<handle
    % Controls display of a goggleBox TissueVision dataset, managing the
    % overview (pre-generated, downscaled stack) and detail (less- or not-
    % downsampled images read from disk as needed) images
properties(SetAccess=protected)
        tvdss
        axes
        currentIndex
        hImg
        nPixelsWidthForZoomedView=2000;
        minZoomLevelForDetailedLoad=1.5;
    end
    properties
        contrastLims
        InfoPanel
    end
    
    properties(Dependent, Access=protected)
        currentPlaneData
    end
    properties(Dependent, SetAccess=protected)
        currentZPlaneOriginalFileNumber
        currentZPlaneOriginalLayerID
        zoomLevel
        downSamplingForCurrentZoomLevel
    end
    
    methods
    %% Constructor
        function obj=goggleViewerDisplay(TVDSS, hAx)
           % assigns input values to properties
           % sets current index to 1
	   % sets contrast to default (16-bit unsigned) limitsobj.currentIndex=1;

           % CALLS drawNow()

    %% Methods
        function stdout=advanceImage(obj)
           
        function stdout=previousImage(obj)
           
        function stdout=seekZ(obj, n)
            % calculates desired index 
	    % changes currentIndex to desired if within range

            % CALLS drawNow()
        
        function drawNow(obj) 
	    % CALLS clearZoomedViews()
  
            % DRAWS the correct plane from the downscaled stack in to the
            % axes, reusing the main Image Object if available
	    
            % sets color axis to contrastLims

        function createZoomedView(obj)
	    % check that zoomLevel > minimum zoom level for detailed load
	    % If it is
		% CALLS getTiffRegionForDetailLoad
		% DRAWS the image on to the axes
               
        function cpd=get.currentPlaneData(obj)
            % returns the raw image data from the overview stack for the current slice
        function czpoc=get.currentZPlaneOriginalFileNumber(obj)
	    % returns the 1-based index of the file matching the current slice
	    % 	e.g. if the downscaled stack was every 10th slice:
	    % 		currentIndex	czpofn
	    %		     1		   1 
	    %		     2		   11 
	    %		     3		   21
	    % 		     ...	   ...
        function czpolid=get.currentZPlaneOriginalLayerID(obj)
 	    % returns the 0-based index of the file matching the current slice.
	    % this is the file number 
	    % 	e.g. if the downscaled stack was every 10th slice:
	    % 		currentIndex	czpolid
	    %		     1		   0 
	    %		     2		   10 
	    %		     3		   20
	    % 		     ...	   ...
        function zl=get.zoomLevel(obj)
            % returns the zoomLevel, calulated by dividing the original x range by the current xlim range
        function dsfczl=get.downSamplingForCurrentZoomLevel(obj)
            % returns what downsampling factor should be used for the detail view
        
    %% Setters
        function set.contrastLims(obj, val)
            % sets contrastLims value and updates color axis



function clearZoomedViews(hAx)
   % deletes all images tagged as 'zoomedView'

function [img, xl, yl] = getTiffRegionForDisplay(obj)
   % gets x and y limits
   % gets full path of matching file name
   % CALLS openTiff on the region matching the current view, with appropriate downsampling

%%---------------------------------------------------------------------------------------------------------%%

classdef TVDownscaledStack<handle

    properties(Dependent, SetAccess=protected)
        name
    end
    
    properties(SetAccess=protected)
        baseDirectory
        experimentName
        sampleName
        
        gbStackDirectory
        fileName
        
        channel
        idx
        xyds
        
    end
    
    properties(Access=protected)
        mosaicInfo
        I_internal        
    end
    
    properties(Dependent, SetAccess=protected)
        I
                
        imageInMemory
        fileOnDisk
        
        xCoords
        yCoords
        zCoords
        
        originalStitchedFileNames
    end
    
    properties(Dependent, Access=protected)
       downscaledStackObjectCollectionPath
    end
    
    methods
    %% Constructor
        function obj=TVDownscaledStack(varargin)
            % There is currently one way to create a downscaledStack object:
            % 1. pass a stitchedMosaicInfo object, a channel, index and downscaling factor
            
	    % sets inputs to object properties:
	    % 	(1) mosaicInfo 	(object)
	    %	(2) channel 	(e.g. 'Ch01' etc.)
	    %	(3) idx		(index of slices to include in stack)
	    %	[4] xyds	(downsampling factor in xy. Defaults to 1)
            % Copies some metadata stright from the mosaicInfo object; archive it just in case it's needed
            % Gets base directory for stacks and fileName for this stack
            
     %% Methods
        function generateStack(obj)
            % Check if the image is in memory. Error if it is
	    % CALLS createDownScaledStack
        function loadStackFromDisk(obj)
            % Check if the image is in memory. Error if it is
	    % CALLS loadTiffStack
        function writeStackToDisk(obj)
            % Check if the image is in memory. Error if it is
            % WRITES the file locally
	    % MOVES the file to the final destination (this avoids errors caused by network transport)
	    % CALLS writeObjToMetadataFile 
        function l=list(obj)
           % Returns a cell array containing the name of all downscaled stacks in the object array
    %% Getters 
        function g=get.downscaledStackObjectCollectionPath(obj)
             % returns full path to the MAT file containing a collection of all TVDownscaledStack objects 
	     %	   for a given 	mosaic
        function nm=get.name(obj)
             % Makes a nice, displayable name for this stack
        function I=get.I(obj)
            % Returns the full voxel matrix. From memory if loaded.
            % 	If not, loads from disk if present
            % 	If neither in memory or on disk, generates stack from stitched image files
        function inMem=get.imageInMemory(obj)
            % Returns true if the image stack has been loaded in to RAM
        function onDisk=get.fileOnDisk(obj)
            % Returns true if the tiff stack is on the hard drive 
        
        function x=get.xCoords(obj)
            % returns the x coordinates of pixels of the in-memory tiff stack. Uses an internal cache for speed
            % 	If not in memory, throws an error
        function y=get.yCoords(obj)
            % returns the y size in um of the in-memory tiff stack. Uses an internal cache for speed
            % 	If not in memory, throws an error
        function z=get.zCoords(obj)
            % returns the z co-ordinates (in um) of slices in the stack. Uses an internal cache for speed
            % 	Can return a value even if not in memory.
        
        function osfp=get.originalStitchedFilePaths(obj)
           % Returns the file original names for ALL stitched images in this channel 
	   % 	(not just those used in the downscaled stack)

function gbStackDirPath=getGBStackPath(obj)
   % Returns the full path to the goggleBox stack directory for this mosaic; creating it if necessary

function fName=createGBStackFileNameForOutput(obj)
   % Returns a a full path to a nicely formatted, valid file name for the tiff stack matching this object

function writeObjToMetadataFile(obj)
   % Clears the internal voxel array from RAM
   % Adds this object to a variable called 'stacks' and saves to the metadata .mat file
   % 	The file will be created if it does not exist
   % 	The file contains all TVDownscaledStack objects for a given mosaic, but without their data.

%%---------------------------------------------------------------------------------------------------------%%

classdef goggleInfoPanel<handle
    properties(SetAccess=protected)
        mainPanel
        goggleViewerDisplay
        xLimMin
        xLimMax
        yLimMin
        yLimMax
        zPosition
        viewMode
        downSamplingFactor
    end
    methods
        function obj=goggleInfoPanel(parent, position, gvd)
           
            % Associates a display object to this panel (obj.goggleViewerDisplay)

            % Intialises Main Panel object
	    % Sets font size to 12
 	    % Creates labels and displays (labels that change)
        function updateDisplay(obj)
            % Displays main axes xlim
	    % Displays main axes ylim
            
            % Displays current slice original file name (e.g 0000, 0001 etc)
	    % Displays the image display mode:
	    %	'In memory' - uses overview stack only
	    %	'From Disk' - loading detail views as needed
	    % Displays downscaling factor	
